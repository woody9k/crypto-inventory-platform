events {
    worker_connections 1024;
}

http {
    upstream auth_service {
        server auth-service:8080;
    }
    
    upstream inventory_service {
        server inventory-service:8080;
    }
    
    upstream compliance_service {
        server compliance-engine:8080;
    }
    
    upstream report_service {
        # Report generator service runs on port 8083 (not 8080 like other services)
        server report-generator:8083;
    }
    
    upstream sensor_service {
        server sensor-manager:8080;
    }
    
    upstream ai_service {
        server ai-analysis-service:8080;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript 
               application/javascript application/xml+rss 
               application/json application/xml;

    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Authentication service
        location /api/v1/auth/ {
            limit_req zone=auth burst=10 nodelay;
            proxy_pass http://auth_service/api/v1/auth;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Inventory service
        location /api/v1/inventory/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://inventory_service/api/v1/inventory;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Compliance service
        location /api/v1/compliance/ {
            limit_req zone=api burst=15 nodelay;
            proxy_pass http://compliance_service/api/v1/compliance;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Report service - routes /api/v1/reports/* to report-generator service
        # Note: proxy_pass without trailing slash to avoid redirect loops
        location /api/v1/reports/ {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://report_service/api/v1/reports;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 300s;  # Reports may take longer
            proxy_read_timeout 300s;
        }

        # Sensor management service
        location /api/v1/sensors/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://sensor_service/api/v1/sensors;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # AI analysis service
        location /api/v1/ai/ {
            limit_req zone=api burst=15 nodelay;
            proxy_pass http://ai_service/api/v1/ai;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 120s;  # AI processing may take longer
            proxy_read_timeout 120s;
        }

        # WebSocket support for real-time updates
        location /ws/ {
            proxy_pass http://inventory_service/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static file serving and catch-all for SPA
        location / {
            try_files $uri $uri/ @fallback;
        }

        location @fallback {
            return 404 "API endpoint not found";
            add_header Content-Type text/plain;
        }

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy strict-origin-when-cross-origin;
    }
}
