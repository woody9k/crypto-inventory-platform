# Crypto Inventory Platform - Balanced Performance Deployments
# Optimized for $72/month (4 hours/day usage)

apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: crypto-inventory
  labels:
    app: crypto-inventory
    service: auth-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: crypto-inventory
      service: auth-service
  template:
    metadata:
      labels:
        app: crypto-inventory
        service: auth-service
    spec:
      containers:
      - name: auth-service
        image: gcr.io/PROJECT_ID/auth-service:latest
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        env:
        - name: PORT
          value: "8080"
        - name: ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: crypto-inventory-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: crypto-inventory-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: crypto-inventory-secrets
              key: jwt-secret
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-service
  namespace: crypto-inventory
  labels:
    app: crypto-inventory
    service: inventory-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: crypto-inventory
      service: inventory-service
  template:
    metadata:
      labels:
        app: crypto-inventory
        service: inventory-service
    spec:
      containers:
      - name: inventory-service
        image: gcr.io/PROJECT_ID/inventory-service:latest
        ports:
        - containerPort: 8082
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: crypto-inventory-secrets
              key: db-host
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: crypto-inventory-secrets
              key: db-name
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: crypto-inventory-secrets
              key: db-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: crypto-inventory-secrets
              key: db-password
        - name: SERVER_PORT
          value: "8082"
        livenessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: compliance-engine
  namespace: crypto-inventory
  labels:
    app: crypto-inventory
    service: compliance-engine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crypto-inventory
      service: compliance-engine
  template:
    metadata:
      labels:
        app: crypto-inventory
        service: compliance-engine
    spec:
      containers:
      - name: compliance-engine
        image: gcr.io/PROJECT_ID/compliance-engine:latest
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        env:
        - name: PORT
          value: "8080"
        - name: ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: crypto-inventory-secrets
              key: database-url
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-analysis-service
  namespace: crypto-inventory
  labels:
    app: crypto-inventory
    service: ai-analysis-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crypto-inventory
      service: ai-analysis-service
  template:
    metadata:
      labels:
        app: crypto-inventory
        service: ai-analysis-service
    spec:
      containers:
      - name: ai-analysis-service
        image: gcr.io/PROJECT_ID/ai-analysis-service:latest
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        env:
        - name: PORT
          value: "8080"
        - name: ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: crypto-inventory-secrets
              key: database-url
        - name: MODEL_PATH
          value: "/app/models"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sensor-manager
  namespace: crypto-inventory
  labels:
    app: crypto-inventory
    service: sensor-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crypto-inventory
      service: sensor-manager
  template:
    metadata:
      labels:
        app: crypto-inventory
        service: sensor-manager
    spec:
      containers:
      - name: sensor-manager
        image: gcr.io/PROJECT_ID/sensor-manager:latest
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        env:
        - name: PORT
          value: "8080"
        - name: ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: crypto-inventory-secrets
              key: database-url
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: report-generator
  namespace: crypto-inventory
  labels:
    app: crypto-inventory
    service: report-generator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crypto-inventory
      service: report-generator
  template:
    metadata:
      labels:
        app: crypto-inventory
        service: report-generator
    spec:
      containers:
      - name: report-generator
        image: gcr.io/PROJECT_ID/report-generator:latest
        ports:
        - containerPort: 8083
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        env:
        - name: PORT
          value: "8083"
        - name: ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: crypto-inventory-secrets
              key: database-url
        livenessProbe:
          httpGet:
            path: /health
            port: 8083
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8083
          initialDelaySeconds: 5
          periodSeconds: 5
